version: '3'
x-logging: &default-logging
  driver: json-file
  options:
    max-file: "5"
    max-size: "10m"

x-service: &default-service
  restart: always
  logging: *default-logging

services:
  mongodb:
    <<: *default-service
    hostname: easytravel-mongodb
    container_name: mongodb
    build:
      context: ./images/mongodb
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-mongodb"  # For production
    ports:
      - 27017
      - 28017

  backend:
    <<: *default-service      
    hostname: easytravel-backend
    container_name: backend
    build:
      context: ./images/backend
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-backend"
    ports:
      - 8091:8080
    links:
      - mongodb
    environment:
      CATALINA_OPTS: "-Dconfig.apmServerDefault=${ET_APM_SERVER_DEFAULT} -Xmx300m"
      ET_DATABASE_LOCATION: "easytravel-mongodb:27017"
      ET_MONGO_AUTH_DB: "admin"
      ET_DATABASE_USER: "etAdmin"
      ET_DATABASE_PASSWORD: "adminadmin"

  frontend:
    <<: *default-service      
    hostname: easytravel-frontend
    container_name: frontend
    build:
      context: ./images/frontend
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-frontend"
    ports:
      - 8080
    links:
      - backend
      - mongodb
    environment:
      CATALINA_OPTS: "-Dconfig.apmServerDefault=${ET_APM_SERVER_DEFAULT} -Xmx525m"
      ET_BACKEND_URL: "http://easytravel-backend:8080"

  angular-frontend:
    <<: *default-service      
    hostname: easytravel-angular-frontend
    container_name: angular-frontend
    build:
      context: ./images/angularfrontend
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-angular-frontend"
    ports:
      - 8080
    links:
      - backend
      - mongodb
    environment:
      CATALINA_OPTS: "-Dconfig.apmServerDefault=${ET_APM_SERVER_DEFAULT} -Xmx525m"
      ET_BACKEND_URL: "http://easytravel-backend:8080"

  www:
    <<: *default-service       
    hostname: easytravel-www
    container_name: www
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-nginx"
    ports:
      - 80:80
      - 9079:9079
      - 8080:8080
    links:
      - frontend
      - angular-frontend
      - backend
    environment:
      ET_FRONTEND_LOCATION: "easytravel-frontend:8080"
      ET_ANGULAR_FRONTEND_LOCATION: "easytravel-angular-frontend:8080"
      ET_BACKEND_LOCATION: "easytravel-backend:8080"

  headless-customer-loadgen:
    <<: *default-service      
    container_name: headless-customer-loadgen
    build:
      context: ./images/headlessloadgen
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-headless-loadgen"
    links:
      - backend
      - frontend
      - www
    environment:
      ET_FRONTEND_URL: "http://easytravel-www:80"
      ET_VISIT_NUMBER: 2
      MAX_CHROME_DRIVERS: 4
      SCENARIO_NAME: "Headless Customer Scenario"

  headless-angular-loadgen:
    <<: *default-service      
    container_name: headless-angular-loadgen
    build:
      context: ./images/headlessloadgen
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-headless-loadgen"
    links:
      - backend
      - angular-frontend
      - www
    environment:
      ET_FRONTEND_URL: "http://easytravel-www:9079"
      ET_VISIT_NUMBER: 2
      MAX_CHROME_DRIVERS: 4
      SCENARIO_NAME: "Headless Angular Scenario"

  loadgen:
    <<: *default-service      
    container_name: loadgen
    build:
      context: ./images/loadgen
      dockerfile: Dockerfile
    # image: "youssef035/easytravel-loadgen"
    links:
      - backend
      - frontend
      - www
    environment:
      ET_FRONTEND_URL: "http://easytravel-www:80"
      ET_BACKEND_URL: "http://easytravel-www:8080"
      ET_PROBLEMS: "BadCacheSynchronization,CPULoad,DatabaseCleanup,DatabaseSlowdown,FetchSizeTooSmall,JourneySearchError404,JourneySearchError500,LoginProblems,MobileErrors,TravellersOptionBox"
      ET_VISIT_NUMBER: 2
